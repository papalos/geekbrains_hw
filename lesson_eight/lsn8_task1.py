# Реализовать класс «Дата»,
# функция-конструктор которого должна принимать дату в виде строки формата «день-месяц-год».
# В рамках класса реализовать два метода.
# Первый, с декоратором @classmethod, должен извлекать число, месяц, год и преобразовывать их тип к типу «Число».
# Второй, с декоратором @staticmethod, должен проводить валидацию числа, месяца и года (например, месяц — от 1 до 12).
# Проверить работу полученной структуры на реальных данных.


class DataD:

    def __init__(self, data: str):
        self._data_str = data

    # Методы класса используют в основном как фабричные методы, здесь он использован в тех же целях
    @classmethod
    def get_date(cls):
        data = input('Введите дату в формате «день-месяц-год»: ')
        obj = cls(data)
        tmp = obj._data_str.split('-')
        if len(tmp) != 3:
            print('Некорректный формат даты. Объект не был создан.')
        else:
            try:
                tmp_int = map(int, tmp)
            except:
                print('Некорректный формат даты. Объект не был создан.')
            else:
                obj.d, obj.m, obj.y = tmp_int
                return obj

    # Статические методы по сути функции ограниченные пространством имен класса
    @staticmethod
    def is_valid_date(obj_date):
        if obj_date.__class__ != DataD:
            print('Методу передан некорректный объект')
        if 0 < obj_date.d < 32 and 0 < obj_date.m < 13 and 1970 < obj_date.y < 2021:
            return True
        return False


# Создаем объект при помощи фабричного метода
s = DataD.get_date()
print(s)
# Вызываем функцию валидации передавая ей обрабатываемый объект
# Из задания непонятно как должен быть вызван данный метод,
# Его также можно было вызвать от имени класса
# или внутри метода get_date исользуя или cls или obj
print(s.is_valid_date(s))
